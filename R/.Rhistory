rm(list = ls())
library(spdep); library(INLA); library(tmap)
setwd("~/GitHub/Dowry_JRSSA_article/R")
load("data_JRSSA.RData")
##################################
## Data organization
##################################
## Expected number of cases and Standardized mortality ratio (SMR)
data$exp<- data$pop_linear * (sum(data$obs)/sum(data$pop_linear))
data$smr<- data$obs/data$exp
## Identifiers: "ID_area", "ID_year" and "ID_area_year"
ID<- data.frame(dist=carto_up$dist, ID_area=carto_up$ID_area)
data<- merge(data, ID, by=c("dist"))
data <- data[order(data$year, data$ID_area),]; rownames(data)<-NULL
data$ID_year<- rep(1:length(unique(data$year)), each=length(unique(data$ID_area)))
data$ID_area_year<-seq(1,length(unique(data$ID_year))*length(unique(data$ID_area)))
## Number of areas and number of time periods
n<- length(unique(data$ID_area))
t<- length(unique(data$ID_year))
## Initial and final time periods
t.from<- min(data$year)
t.to<- max(data$year)
## Standardized of covariates
for(i in c(1,5,6)){ eval(parse(text= paste0("data$x",i,"_stand<- scale(data$x",i,")" ))) }
## Spatial neighborhood matrix (Q_{xi})
spdep::nb2INLA("uttar_pradesh_nb.graph", spdep::poly2nb(carto_up))
g <- INLA::inla.read.graph("uttar_pradesh_nb.graph")
Q_xi <- matrix(0, g$n, g$n)
for (i in 1:g$n){
Q_xi[i,i]=g$nnbs[[i]]
Q_xi[i,g$nbs[[i]]]=-1
}
## Structure matrix to implement the LCAR prior.
Q_Leroux <- diag(n)-Q_xi
## Temporal structure matrix for a RW1 prior
D1 <- diff(diag(t), differences=1)
Q_gammaRW1 <- t(D1)%*%D1
## Temporal structure matrix for a RW2 prior
D2 <- diff(diag(t),differences=2)
Q_gammaRW2 <- t(D2)%*%D2
## fc risk
R<- sum(data$obs)/sum(data$pop_linear)
fc.risks<-function(x){ x/R }
##################################
## load results
##################################
setwd("D:/Gonzalo/uttar-pradesh-dowry-deaths/revision _4_round/R_code/resul")
load("models_nit_x1612_stand.RData")
models$icar.rw1.t2
model<-models$icar.rw1.t2
model
#########################
## function Probability Integral Transform
pit <- function(x, Px, Px1, n.bins=10, y.max=2.75, my.title="PIT histogram") {
a.mat <- matrix(0,n.bins,length(x))
k.vec <- pmax(ceiling(n.bins*Px1),1)
m.vec <- ceiling(n.bins*Px)
d.vec <- Px-Px1
for (i in 1:length(x))
{
if (k.vec[i]==m.vec[i]) {a.mat[k.vec[i],i]=1}
else
{
a.mat[k.vec[i],i]=((k.vec[i]/n.bins)-Px1[i])/d.vec[i]
if ((k.vec[i]+1)<=(m.vec[i]-1))
{for (j in ((k.vec[i]+1):(m.vec[i]-1))) {a.mat[j,i]=(1/(n.bins*d.vec[i]))}}
a.mat[m.vec[i],i]=(Px[i]-((m.vec[i]-1)/n.bins))/d.vec[i]
}
}
a <- apply(a.mat,1,sum)
a <- (n.bins*a)/(length(x))
p <- (0:n.bins)/n.bins
PIT <- "Probability Integral Transform"
RF <- "Relative Frequency"
plot(p, p, ylim=c(0,y.max), type="n", xlab=PIT, ylab=RF, main=my.title, cex.axis=1.2, cex.lab=1.2, cex.main=1.2)
temp1 <- ((1:n.bins)-1)/n.bins
temp2 <- ((1:n.bins)/n.bins)
o.vec <- rep(0,n.bins)
segments(temp1,o.vec,temp1,a)
segments(temp1,a,temp2,a)
segments(temp2,o.vec,temp2,a)
segments(0,0,1,0)
}
## print figure 3
par(mfrow=c(1,2))
pit(x=data$obs, Px=models$icar.rw1.ad$cpo$pit, Px1=models$icar.rw1.ad$cpo$pit-models$icar.rw1.ad$cpo$cpo, n.bins=20, y.max=2, my.title="Additive model")
pit(x=data$obs, Px=models$icar.rw1.t2$cpo$pit, Px1=models$icar.rw1.t2$cpo$pit-models$icar.rw1.t2$cpo$cpo, n.bins=20, y.max=2, my.title="Type II interaction model")
## rm
rm(list = c("pit"))
###########
#####################
## ID selected districts
id.area<- c(2,40,43,64,66,70)
## log(risks) additive model
marg<- lapply(models$icar.rw1.ad $marginals.fitted.values, function(x){inla.tmarginal(fc.risks, x)})
log.risk.1<- matrix(unlist(lapply(marg, function(x){inla.emarginal(log, x)})), nrow=n, ncol=t, byrow = FALSE)
## log(risks) Type II model
marg<- lapply(models$icar.rw1.t2$marginals.fitted.values, function(x){inla.tmarginal(fc.risks, x)})
log.risk.2<- matrix(unlist(lapply(marg, function(x){inla.emarginal(log, x)})), nrow=n, ncol=t, byrow = FALSE)
## minimum and maximum values
inf<- round(min(log.risk.1[id.area,], log.risk.2[id.area,]),2) -0.1
top<- round(max(log.risk.1[id.area,], log.risk.2[id.area,]),2) +0.5
x<- 1:t
## color
colores<-c("darkolivegreen","chocolate1", "blue4", "darkorchid2", "deeppink1", "darkgoldenrod3", "cyan4")
## print figure 4
par(mfrow=c(1,2))
plot(range(x), c(inf, top),type="n",xlab="Year",ylab="", xaxt="n", cex.lab=1.2, cex.axis=1.2, cex.main=1.2)
axis(1, at=seq(1,t), labels=seq(t.from,t.to), las=0, cex.axis=1.2)
title(ylab=expression(log(R[it])), line=2.2, cex.lab=1.2)
for(i in id.area){
lines(log.risk.1[i,], col=colores[which(id.area==i)] ,lwd=2, type = "l")
abline(h=0,lty=2)
}
legend("top", as.character(unique(carto_up$dist)[id.area]), ncol=2, pch=c("-","-","-","-","-","-"), col=colores, bty="n",lwd=2, cex=1.2)
plot(range(x), c(inf, top),type="n",xlab="Year",ylab="", xaxt="n", cex.lab=1.2, cex.axis=1.2, cex.main=1.2)
axis(1, at=seq(1,t), labels=seq(t.from,t.to), las=0, cex.axis=1.2)
title(ylab=expression(log(R[it])), line=2.2, cex.lab=1.2)
for(i in id.area){
lines(log.risk.2[i,], col=colores[which(id.area==i)] ,lwd=2, type = "l")
abline(h=0,lty=2)
}
legend("top", as.character(unique(carto_up$dist)[id.area]), ncol=2, pch=c("-","-","-","-","-","-"), col=colores, bty="n",lwd=2, cex=1.2)
## rm
rm(list = c("id.area", "x", "colores","marg", "log.risk.1", "log.risk.2", "inf", "top","i"))
###############
##################
## ID selected districts
id.area<- c(2,40,43,64,66,70)
## log(risks) additive model
marg<- lapply(models$icar.rw1.ad $marginals.fitted.values, function(x){inla.tmarginal(fc.risks, x)})
log.risk.1<- matrix(unlist(lapply(marg, function(x){inla.emarginal(log, x)})), nrow=n, ncol=t, byrow = FALSE)
## log(risks) Type II model
marg<- lapply(models$icar.rw1.t2$marginals.fitted.values, function(x){inla.tmarginal(fc.risks, x)})
log.risk.2<- matrix(unlist(lapply(marg, function(x){inla.emarginal(log, x)})), nrow=n, ncol=t, byrow = FALSE)
## minimum and maximum values
inf<- round(min(log.risk.1[id.area,], log.risk.2[id.area,]),2) -0.1
top<- round(max(log.risk.1[id.area,], log.risk.2[id.area,]),2) +0.5
x<- 1:t
## color
colores<-c("darkolivegreen","chocolate1", "blue4", "darkorchid2", "deeppink1", "darkgoldenrod3", "cyan4")
## print figure 4
par(mfrow=c(1,2))
plot(range(x), c(inf, top),type="n",xlab="Year",ylab="", xaxt="n", cex.lab=1.2, cex.axis=1.2, cex.main=1.2)
axis(1, at=seq(1,t), labels=seq(t.from,t.to), las=0, cex.axis=1.2)
title(ylab=expression(log(R[it])), line=2.2, cex.lab=1.2)
for(i in id.area){
lines(log.risk.1[i,], col=colores[which(id.area==i)] ,lwd=2, type = "l")
abline(h=0,lty=2)
}
legend("top", as.character(unique(carto_up$dist)[id.area]), ncol=2, pch=c("-","-","-","-","-","-"), col=colores, bty="n",lwd=2, cex=1.2)
plot(range(x), c(inf, top),type="n",xlab="Year",ylab="", xaxt="n", cex.lab=1.2, cex.axis=1.2, cex.main=1.2)
axis(1, at=seq(1,t), labels=seq(t.from,t.to), las=0, cex.axis=1.2)
title(ylab=expression(log(R[it])), line=2.2, cex.lab=1.2)
for(i in id.area){
lines(log.risk.2[i,], col=colores[which(id.area==i)] ,lwd=2, type = "l")
abline(h=0,lty=2)
}
legend("top", as.character(unique(carto_up$dist)[id.area]), ncol=2, pch=c("-","-","-","-","-","-"), col=colores, bty="n",lwd=2, cex=1.2)
## rm
rm(list = c("id.area", "x", "colores","marg", "log.risk.1", "log.risk.2", "inf", "top","i"))
#################
###############
carto<- carto_up
## Posterior mean of the distric-specific relative risk
carto$zeta <- unlist(lapply(model$marginals.random$ID.area, function(x) inla.emarginal(exp,x)))[1:n]
## P(exp(xi_i))> 1|O)
prob_zeta <- unlist(lapply(model$marginals.random$ID.area, function(x){1-inla.pmarginal(0, x)}))[1:n]
carto$prob_zeta <- Hmisc::cut2(prob_zeta,c(0,0.1,0.2,0.8,0.9,1))
## print figure 5
gridExtra::grid.arrange(sp::spplot(carto, "zeta", names.attr="", main="", col.regions=RColorBrewer::brewer.pal(9,"YlOrRd"),
colorkey=list(labels=c("0.00", "0.25","0.50","0.75","1.00","1.25","1.50","1.75","2.00","2.15"), at=(0:9)/9), at=c(seq(0.00, 2.00,0.25),2.15)),
sp::spplot(carto, "prob_zeta", names.attr="", cuts=4, col.regions=RColorBrewer::brewer.pal(5,"PuBu"),
colorkey=list(labels=list(at=c(.5,1.5,2.5,3.5,4.5,5.5),labels = c("0","0.1","0.2","0.8","0.9","1")))),
ncol=2)
####################
carto<- carto_up
years<- c(2001,2011)
eval(parse(text= paste0("carto$smr_",years,"<-data[data$year==",years,",]$smr") ) )
j<-c(1,5,6)
for(i in 1:length(years)){ eval(parse(text=  paste0("carto$x",j,"_",years[i],"<-data[data$year==",years[i],",]$x",j)) ) }
## print figure S.1
gridExtra::grid.arrange(sp::spplot(obj=carto, zcol=paste("smr_",years,sep=""), main="",  col.regions=RColorBrewer::brewer.pal(6,"YlOrRd"),
names.attr=paste0(years," SMR"),  axes=TRUE, at=c(0.25,0.75,1,1.25,1.75,2.25,3),
as.table=TRUE, layout=c(1,2),  colorkey=list(labels=c("0.25","0.75","1","1.25","1.75","2.25","3"),at=(0:6)/6)),
sp::spplot(obj=carto, zcol=paste("x1_",years,sep=""), main="",  col.regions=RColorBrewer::brewer.pal(5,"YlOrRd"),
names.attr=paste0(years," Sex ratio"),  axes=TRUE, at=c(825,875,925,975,1000,1025),
as.table=TRUE, layout=c(1,2),  colorkey=list(labels=c("825","875","925","975","1000","1025"),at=(0:5)/5)),
sp::spplot(obj=carto, zcol=paste("x5_",years,sep=""), main="",  col.regions=RColorBrewer::brewer.pal(5,"YlOrRd"),
names.attr=paste0(years," Murder"),  axes=TRUE, at=c(0.50,2.88,5.25,7.62,10.00,16.00),
as.table=TRUE, layout=c(1,2),  colorkey=list(labels=c("0.50","2.88","5.25","7.62","10.0","16.0"),at=(0:5)/5)),
ncol=3)
## rm
rm(list=c("years","carto", "i","j"))
models_all
rm(list = ls())
setwd("~/GitHub/Dowry_JRSSA_article/R")
rm(list = ls())
library(spdep); library(INLA); library(tmap)
## Working directory
dir.main<-""              # Set an appropiate directory
setwd(dir.main)
## Load data and cartographies
load("data_JRSSA.RData")
############################
## Expected number of cases and Standardized mortality ratio (SMR)
data$exp<- data$pop_linear * (sum(data$obs)/sum(data$pop_linear))
data$smr<- data$obs/data$exp
## Identifiers: "ID_area", "ID_year" and "ID_area_year"
ID<- data.frame(dist=carto_up$dist, ID_area=carto_up$ID_area)
data<- merge(data, ID, by=c("dist"))
data <- data[order(data$year, data$ID_area),]; rownames(data)<-NULL
data$ID_year<- rep(1:length(unique(data$year)), each=length(unique(data$ID_area)))
data$ID_area_year<-seq(1,length(unique(data$ID_year))*length(unique(data$ID_area)))
## Number of areas and number of time periods
n<- length(unique(data$ID_area))
t<- length(unique(data$ID_year))
## Initial and final time periods
t.from<- min(data$year)
t.to<- max(data$year)
## Standardized of covariates
for(i in c(1,5,6)){ eval(parse(text= paste0("data$x",i,"_stand<- scale(data$x",i,")" ))) }
## Spatial neighborhood matrix (Q_{xi})
spdep::nb2INLA("uttar_pradesh_nb.graph", spdep::poly2nb(carto_up))
g <- INLA::inla.read.graph("uttar_pradesh_nb.graph")
Q_xi <- matrix(0, g$n, g$n)
for (i in 1:g$n){
Q_xi[i,i]=g$nnbs[[i]]
Q_xi[i,g$nbs[[i]]]=-1
}
## Structure matrix to implement the LCAR prior.
Q_Leroux <- diag(n)-Q_xi
## Temporal structure matrix for a RW1 prior
D1 <- diff(diag(t), differences=1)
Q_gammaRW1 <- t(D1)%*%D1
## Temporal structure matrix for a RW2 prior
D2 <- diff(diag(t),differences=2)
Q_gammaRW2 <- t(D2)%*%D2
##########################################################################################
## Fitting models: log(p_{it}) = eta + xi_{i} + gamma_{t} + delta_{it} + beta*x         ##
## mu_{it}= n_{it} * p_{it}                                                             ##
##########################################################################################
## Define appropriate hyperprior distributions (for LCAR)
sdunif="expression:
logdens=-log_precision/2;
return(logdens)"
lunif = "expression:
a = 1;
b = 1;
beta = exp(theta)/(1+exp(theta));
logdens = lgamma(a+b)-lgamma(a)-lgamma(b)+(a-1)*log(beta)+(b-1)*log(1-beta);
log_jacobian = log(beta*(1-beta));
return(logdens+log_jacobian)"
## Define appropriate constraint matrices
## (a) Spatio-temporal random effect: Type I
id_nt<-diag(1,nrow=n*t)
## (b) Spatio-temporal random effect: Type II
## (b.1) Temporal random effect: RW1
R_1_2 <- kronecker(Q_gammaRW1,diag(n)); r_def_1_2 <- n;   A_constr_1_2 <- kronecker(matrix(1,1,t),diag(n)) # LCAR, DCAR, ICAR
R_1_2_scaled<- R_1_2*exp(mean(log(diag(INLA:::inla.ginv(R_1_2)))))                                         # BYM2
## (b.2) Temporal random effect: RW2
R_2_2 <- kronecker(Q_gammaRW2,diag(n)); r_def_2_2 <- 2*n; A_constr_2_2 <- kronecker(matrix(1,1,t),diag(n)) # LCAR, DCAR, ICAR
R_2_2_scaled<- R_2_2*exp(mean(log(diag(INLA:::inla.ginv(R_2_2)))))                                         # BYM2
## (c) Spatio-temporal random effect: Type III
## (c.1) Temporal random effect: iid
R_0_3 <- kronecker(diag(t),Q_xi); r_def_0_3 <- t; A_constr_0_3 <- kronecker(diag(t),matrix(1,1,n))   # LCAR, DCAR, ICAR
R_0_3_scaled<- R_0_3*exp(mean(log(diag(INLA:::inla.ginv(R_0_3)))))                                   # BYM2
## (c.2) Temporal random effect: RW1
R_1_3 <- kronecker(diag(t),Q_xi); r_def_1_3 <- t; A_constr_1_3 <- kronecker(diag(t),matrix(1,1,n))   # LCAR, DCAR, ICAR
R_1_3_scaled<- R_1_3*exp(mean(log(diag(INLA:::inla.ginv(R_1_3)))))                                   # BYM2
## (c.3) Temporal random effect: RW2
R_2_3 <- kronecker(diag(t),Q_xi); r_def_2_3 <- t; A_constr_2_3 <- kronecker(diag(t),matrix(1,1,n))   # LCAR, DCAR, ICAR
R_2_3_scaled<- R_2_3*exp(mean(log(diag(INLA:::inla.ginv(R_2_3)))))                                   # BYM2
## (d) Spatio-temporal random effect: Type IV
## (d.1) Temporal random effect: RW1
R_1_4 <- kronecker(Q_gammaRW1,Q_xi); r_def_1_4 <- n+t-1;   A.1.1 <- kronecker(matrix(1,1,t),diag(n)); A.1.2 <- kronecker(diag(t),matrix(1,1,n)); A_constr_1_4 <- rbind(A.1.1,A.1.2) # LCAR, DCAR, ICAR
R_1_4_scaled<- R_1_4*exp(mean(log(diag(INLA:::inla.ginv(R_1_4)))))  # BYM2
## (d.2) Temporal random effect: RW1
R_2_4 <- kronecker(Q_gammaRW2,Q_xi); r_def_2_4 <- 2*n+t-2; A.2.1 <- kronecker(matrix(1,1,t),diag(n)); A.2.2 <- kronecker(diag(t),matrix(1,1,n)); A_constr_2_4 <- rbind(A.2.1,A.2.2) # LCAR, DCAR, ICAR
R_2_4_scaled<- R_2_4*exp(mean(log(diag(INLA:::inla.ginv(R_2_4))))) # BYM2
## Load formulas
source("inla_formulas_JRSSA.R")
Data.INLA<- data.frame(O=data$obs, E=data$exp, pop=data$pop_linear,
x1_stand=data$x1_stand, x5_stand=data$x5_stand, x6_stand=data$x6_stand,
ID.area= data$ID_area, ID.year=data$ID_year, ID.area.year=data$ID_area_year)
models<-list(lcar.iid.ad=NULL, lcar.rw1.ad=NULL, lcar.rw2.ad=NULL, bym2.iid.ad=NULL, bym2.rw1.ad=NULL, bym2.rw2.ad=NULL, dcar.iid.ad=NULL, dcar.rw1.ad=NULL, dcar.rw2.ad=NULL, icar.iid.ad=NULL, icar.rw1.ad=NULL, icar.rw2.ad=NULL,
lcar.iid.t1=NULL, lcar.rw1.t1=NULL, lcar.rw2.t1=NULL, bym2.iid.t1=NULL, bym2.rw1.t1=NULL, bym2.rw2.t1=NULL, dcar.iid.t1=NULL, dcar.rw1.t1=NULL, dcar.rw2.t1=NULL, icar.iid.t1=NULL, icar.rw1.t1=NULL, icar.rw2.t1=NULL,
lcar.rw1.t2=NULL, lcar.rw2.t2=NULL, bym2.rw1.t2=NULL, bym2.rw2.t2=NULL, dcar.rw1.t2=NULL, dcar.rw2.t2=NULL, icar.rw1.t2=NULL, icar.rw2.t2=NULL,
lcar.iid.t3=NULL, lcar.rw1.t3=NULL, lcar.rw2.t3=NULL, bym2.iid.t3=NULL, bym2.rw1.t3=NULL, bym2.rw2.t3=NULL, dcar.iid.t3=NULL, dcar.rw1.t3=NULL, dcar.rw2.t3=NULL, icar.iid.t3=NULL, icar.rw1.t3=NULL, icar.rw2.t3=NULL,
lcar.rw1.t4=NULL, lcar.rw2.t4=NULL, bym2.rw1.t4=NULL, bym2.rw2.t4=NULL, dcar.rw1.t4=NULL, dcar.rw2.t4=NULL, icar.rw1.t4=NULL, icar.rw2.t4=NULL)
names(models)
names(models)
models<-list(lcar.iid.ad=NULL, lcar.rw1.ad=NULL, lcar.rw2.ad=NULL, bym2.iid.ad=NULL, bym2.rw1.ad=NULL, bym2.rw2.ad=NULL, dcar.iid.ad=NULL, dcar.rw1.ad=NULL, dcar.rw2.ad=NULL, icar.iid.ad=NULL, icar.rw1.ad=NULL, icar.rw2.ad=NULL,
lcar.iid.t1=NULL, lcar.rw1.t1=NULL, lcar.rw2.t1=NULL, bym2.iid.t1=NULL, bym2.rw1.t1=NULL, bym2.rw2.t1=NULL, dcar.iid.t1=NULL, dcar.rw1.t1=NULL, dcar.rw2.t1=NULL, icar.iid.t1=NULL, icar.rw1.t1=NULL, icar.rw2.t1=NULL,
lcar.rw1.t2=NULL, lcar.rw2.t2=NULL, bym2.rw1.t2=NULL, bym2.rw2.t2=NULL, dcar.rw1.t2=NULL, dcar.rw2.t2=NULL, icar.rw1.t2=NULL, icar.rw2.t2=NULL,
lcar.iid.t3=NULL, lcar.rw1.t3=NULL, lcar.rw2.t3=NULL, bym2.iid.t3=NULL, bym2.rw1.t3=NULL, bym2.rw2.t3=NULL, dcar.iid.t3=NULL, dcar.rw1.t3=NULL, dcar.rw2.t3=NULL, icar.iid.t3=NULL, icar.rw1.t3=NULL, icar.rw2.t3=NULL,
lcar.rw1.t4=NULL, lcar.rw2.t4=NULL, bym2.rw1.t4=NULL, bym2.rw2.t4=NULL, dcar.rw1.t4=NULL, dcar.rw2.t4=NULL, icar.rw1.t4=NULL, icar.rw2.t4=NULL)
names(models)
names(models)[28]
names(models)[29]
names(models)[33]
names(models)[32]
names(models)[31]
i<-31
models[[i]]<- INLA::inla(formulas[[i]], family="poisson", data=Data.INLA, E=pop, control.predictor=list(compute=TRUE, cdf=c(log(1))), control.compute=list(dic=TRUE, cpo=TRUE, waic=TRUE), control.inla=list(strategy="laplace", npoints=21))
## fc risk
R<- sum(data$obs)/sum(data$pop_linear)
fc.risks<-function(x){ x/R }
models$icar.rw1.t2
model<- models$icar.rw1.t2
carto<- carto_up
carto$zeta <- unlist(lapply(model$marginals.random$ID.area, function(x) inla.emarginal(exp,x)))[1:n]
prob_zeta <- unlist(lapply(model$marginals.random$ID.area, function(x){1-inla.pmarginal(0, x)}))[1:n]
carto$prob_zeta <- Hmisc::cut2(prob_zeta,c(0,0.1,0.2,0.8,0.9,1))
gridExtra::grid.arrange(sp::spplot(carto, "zeta", names.attr="", main="", col.regions=RColorBrewer::brewer.pal(9,"YlOrRd"),
colorkey=list(labels=c("0.00", "0.25","0.50","0.75","1.00","1.25","1.50","1.75","2.00","2.15"), at=(0:9)/9), at=c(seq(0.00, 2.00,0.25),2.15)),
sp::spplot(carto, "prob_zeta", names.attr="", cuts=4, col.regions=RColorBrewer::brewer.pal(5,"PuBu"),
colorkey=list(labels=list(at=c(.5,1.5,2.5,3.5,4.5,5.5),labels = c("0","0.1","0.2","0.8","0.9","1")))),
ncol=2)
gridExtra::grid.arrange(sp::spplot(carto, "zeta", names.attr="", main="", col.regions=RColorBrewer::brewer.pal(9,"YlOrRd"),
colorkey=list(labels=c("0.00", "0.25","0.50","0.75","1.00","1.25","1.50","1.75","2.00","2.15"), at=(0:9)/9), at=c(seq(0.00, 2.00,0.25),2.15)),
sp::spplot(carto, "prob_zeta", names.attr="", cuts=4, col.regions=RColorBrewer::brewer.pal(5,"PuBu"),
colorkey=list(labels=list(at=c(.5,1.5,2.5,3.5,4.5,5.5),labels = c("0","0.1","0.2","0.8","0.9","1")))),
ncol=2)
